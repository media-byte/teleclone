---
  name: build
  
  # Trigger the workflow on push or pull request
  on:
    push:
      branches:
        - '**'
      tags:
        - '**'
    pull_request:
    workflow_dispatch:
      inputs:
        manual:
          description: Manual run (bypass default conditions)
          type: boolean
          required: true
          default: true
  
  jobs:
    build-linux:
      if: ${{ github.event.inputs.manual == 'true' || (github.repository == 'media-byte/teleclone' && (github.event_name != 'pull_request' || github.event.pull_request.head.repo.full_name != github.event.pull_request.base.repo.full_name)) }}
      timeout-minutes: 60
      strategy:
        fail-fast: false
        matrix:
          job_name: ['linux']
  
      include:
        - job_name: linux
          os: ubuntu-latest
          go: '1.21'
          gotags: cmount
          build_flags: '-include "^linux/"'
          check: true
          quicktest: true
          racequicktest: true
          librclonetest: true
          deploy: true
  
    build-linux-amd64:
      if: ${{ github.event.inputs.manual == 'true' || (github.repository == 'media-byte/teleclone' && (github.event_name != 'pull_request' || github.event.pull_request.head.repo.full_name != github.event.pull_request.base.repo.full_name)) }}
      timeout-minutes: 60
      strategy:
        fail-fast: false
        matrix:
          job_name: ['linux_386']
  
      include:
        - job_name: linux_386
          os: ubuntu-latest
          go: '1.21'
          goarch: 386
          gotags: cmount
          quicktest: true
  
    build-windows:
      if: ${{ github.event.inputs.manual == 'true' || (github.repository == 'media-byte/teleclone' && (github.event_name != 'pull_request' || github.event.pull_request.head.repo.full_name != github.event.pull_request.base.repo.full_name)) }}
      timeout-minutes: 60
      strategy:
        fail-fast: false
        matrix:
          job_name: ['windows']
  
      include:
        - job_name: windows
          os: windows-latest
          go: '1.21'
          gotags: cmount
          cgo: '0'
          build_flags: '-include "^windows/"'
          build_args: '-buildmode exe'
          quicktest: true
          deploy: true
  
    upload-artifacts:
      needs: [build-linux, build-linux-amd64, build-windows]
      runs-on: ubuntu-latest
      steps:
        - name: Checkout
          uses: actions/checkout@v4
          with:
            fetch-depth: 0
  
        - name: Upload Artifacts
          uses: actions/upload-artifact@v3
          with:
            name: rclone
            path: build/
  